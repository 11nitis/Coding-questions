#include <iostream>
#include<bits/stdc++.h> 
using namespace std;
class Node
{
public:
    int data;
    Node *left;
    Node *right;
    Node(int d)
    {
        this->data = d;
        this->left = NULL;
        this->right = NULL;
    }
};
//level order traversal5
vector<vector<int >> LevelOrderTrav(Node * root){
        vector<vector<int>>ans;// for whole array including all the level array
      if(root==NULL) return ans;

        queue<Node *>q;
        q.push(root);
        while(!q.empty()){
            int s =q.size();
              vector<int>level; // array for each level
            for(int i=0;i<s;i++){
                
                Node * temp=q.front();
                q.pop();
                if(temp->left!=NULL){
                   q.push(temp->left);
                }
                 if(temp->right!=NULL){
                   q.push(temp->right);
                }
                level.push_back(temp->data);
            }
            ans.push_back(level);
        }
        return ans;
}
int main()
{

    Node *root = new Node(1);
    root->left = new Node(5);
    root->right = new Node(3);
    root->left->left = new Node(9);
    root->left->right = new Node(12);
    root->right->right = new Node(98);
    root->right->left = new Node(13);
    // print(root);
    vector<vector<int>>nk=  LevelOrderTrav(root);
      for (int i = 0; i < nk.size(); i++)
    {
        for (int j = 0; j < nk[i].size(); j++)
        {
            cout << nk[i][j] << " ";
        }   
        cout << endl;
    }
 //three level
  
    
    return 0;
}
  
