#include<iostream>
using namespace std;
int** create2darray(const int m, const int n);
void inputarray(int** inputarray, const int m, const int n);
void outputarray(int** arr, const int m, const int n);
bool checkdiagnol(int** arr, const int m, const int n);
void destructor(int** arr, const int m, const int n);
int main()
{
	int m, n;
	cout << "enter array rows and col  : \n";
	cin >> m >> n;
	int** array = create2darray(m, n);
	inputarray(array, m, n);
	outputarray(array, m, n);
	bool flag = checkdiagnol(array, m, n);
	destructor(array, m, n);
	array = nullptr;
	if (flag)
	{
	    cout << "It's a diagonal matrix.";
	}
	else
	{
		cout << "It's not a diagonal matrix.";
	}
	return 0;
}
int** create2darray(const int m, const int n)
{
	int** array = new int* [m];
	for (int i = 0; i < m; i++)
	{
		array[i] = new int[n];
	}
	return array;
}
void inputarray(int** inputarray, const int m, const int n)
{
	cout << "Enter elements of array : \n";
	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cout << "Enter element at position" << i << j << ": ";
			cin >> inputarray[i][j];
		}
	}
}
void outputarray(int** arr, const int m, const int n)
{
	cout << "Array is:" << endl;
	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cout << arr[i][j] << " ";
		}
		cout << endl;
	}
}
bool checkdiagnol(int** arr, const int m, const int n)
{
	if (m != n)
	{
		return false;
	}
	for (int i = 0; i < m; i++)
  {
		for (int j = 0; j < n; j++)
		{
			if (i != j && arr[i][j] != 0)
			{
				return false;
			}
		}
	}
	return true;
}
void destructor(int** arr, const int m, const int n)
{
	for (int i = 0; i < m; i++)
	{
		delete[] arr[i];
	}	delete[] arr;
}
